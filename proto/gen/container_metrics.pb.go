// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/container_metrics.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ContainerMetrics represents all runtime metrics for a single container.
type ContainerMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique container ID (as provided by CRI).
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Container name (as specified in the PodSpec).
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Image identifier (e.g., imageID or image digest).
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// Timestamp of container creation in nanoseconds since epoch.
	CreatedAt int64 `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Container state (e.g., "CONTAINER_RUNNING", "CONTAINER_EXITED", etc.).
	State string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	// Number of times the container has been (re)created. Starts at 0.
	Attempt uint32 `protobuf:"varint,6,opt,name=attempt,proto3" json:"attempt,omitempty"`
	// CPU usage metrics.
	CpuMetrics *CpuMetrics `protobuf:"bytes,7,opt,name=cpu_metrics,json=cpuMetrics,proto3" json:"cpu_metrics,omitempty"`
	// Memory usage metrics.
	MemoryMetrics *MemoryMetrics `protobuf:"bytes,8,opt,name=memory_metrics,json=memoryMetrics,proto3" json:"memory_metrics,omitempty"`
	// Filesystem usage metrics.
	FileSystemMetrics *FileSystemMetrics `protobuf:"bytes,9,opt,name=file_system_metrics,json=fileSystemMetrics,proto3" json:"file_system_metrics,omitempty"`
	// Swap usage metrics.
	SwapMetrics   *SwapMetrics `protobuf:"bytes,10,opt,name=swap_metrics,json=swapMetrics,proto3" json:"swap_metrics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerMetrics) Reset() {
	*x = ContainerMetrics{}
	mi := &file_proto_container_metrics_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerMetrics) ProtoMessage() {}

func (x *ContainerMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_metrics_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerMetrics.ProtoReflect.Descriptor instead.
func (*ContainerMetrics) Descriptor() ([]byte, []int) {
	return file_proto_container_metrics_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerMetrics) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContainerMetrics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContainerMetrics) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ContainerMetrics) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ContainerMetrics) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ContainerMetrics) GetAttempt() uint32 {
	if x != nil {
		return x.Attempt
	}
	return 0
}

func (x *ContainerMetrics) GetCpuMetrics() *CpuMetrics {
	if x != nil {
		return x.CpuMetrics
	}
	return nil
}

func (x *ContainerMetrics) GetMemoryMetrics() *MemoryMetrics {
	if x != nil {
		return x.MemoryMetrics
	}
	return nil
}

func (x *ContainerMetrics) GetFileSystemMetrics() *FileSystemMetrics {
	if x != nil {
		return x.FileSystemMetrics
	}
	return nil
}

func (x *ContainerMetrics) GetSwapMetrics() *SwapMetrics {
	if x != nil {
		return x.SwapMetrics
	}
	return nil
}

// CpuMetrics represents CPU usage statistics for a container at a specific point in time.
type CpuMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection timestamp in nanoseconds since epoch. Must be > 0.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Cumulative CPU usage across all cores, in nanocores, since the container was created.
	UsageNanoCores *wrapperspb.UInt64Value `protobuf:"bytes,2,opt,name=usage_nano_cores,json=usageNanoCores,proto3" json:"usage_nano_cores,omitempty"`
	// Cumulative CPU usage across all cores, in core-nanoseconds, since container creation.
	// This represents the total active CPU time.
	UsageCoreNanoSeconds *wrapperspb.UInt64Value `protobuf:"bytes,3,opt,name=usage_core_nano_seconds,json=usageCoreNanoSeconds,proto3" json:"usage_core_nano_seconds,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CpuMetrics) Reset() {
	*x = CpuMetrics{}
	mi := &file_proto_container_metrics_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CpuMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CpuMetrics) ProtoMessage() {}

func (x *CpuMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_metrics_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CpuMetrics.ProtoReflect.Descriptor instead.
func (*CpuMetrics) Descriptor() ([]byte, []int) {
	return file_proto_container_metrics_proto_rawDescGZIP(), []int{1}
}

func (x *CpuMetrics) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CpuMetrics) GetUsageNanoCores() *wrapperspb.UInt64Value {
	if x != nil {
		return x.UsageNanoCores
	}
	return nil
}

func (x *CpuMetrics) GetUsageCoreNanoSeconds() *wrapperspb.UInt64Value {
	if x != nil {
		return x.UsageCoreNanoSeconds
	}
	return nil
}

// MemoryMetrics provides detailed memory usage statistics for a container.
type MemoryMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection timestamp in nanoseconds since epoch. Must be > 0.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Working set memory in bytes (memory actively used and not easily reclaimed).
	WorkingSetBytes *wrapperspb.UInt64Value `protobuf:"bytes,2,opt,name=working_set_bytes,json=workingSetBytes,proto3" json:"working_set_bytes,omitempty"`
	// Estimated memory available for use: memory limit - working set.
	AvailableBytes *wrapperspb.UInt64Value `protobuf:"bytes,3,opt,name=available_bytes,json=availableBytes,proto3" json:"available_bytes,omitempty"`
	// Total memory usage in bytes (including cached, buffered, and active pages).
	UsageBytes *wrapperspb.UInt64Value `protobuf:"bytes,4,opt,name=usage_bytes,json=usageBytes,proto3" json:"usage_bytes,omitempty"`
	// Resident Set Size: physical memory used (anonymous + swap cache + THP).
	RssBytes *wrapperspb.UInt64Value `protobuf:"bytes,5,opt,name=rss_bytes,json=rssBytes,proto3" json:"rss_bytes,omitempty"`
	// Total number of minor page faults (no I/O).
	PageFaults *wrapperspb.UInt64Value `protobuf:"bytes,6,opt,name=page_faults,json=pageFaults,proto3" json:"page_faults,omitempty"`
	// Total number of major page faults (I/O was needed to fulfill the request).
	MajorPageFaults *wrapperspb.UInt64Value `protobuf:"bytes,7,opt,name=major_page_faults,json=majorPageFaults,proto3" json:"major_page_faults,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MemoryMetrics) Reset() {
	*x = MemoryMetrics{}
	mi := &file_proto_container_metrics_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryMetrics) ProtoMessage() {}

func (x *MemoryMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_metrics_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryMetrics.ProtoReflect.Descriptor instead.
func (*MemoryMetrics) Descriptor() ([]byte, []int) {
	return file_proto_container_metrics_proto_rawDescGZIP(), []int{2}
}

func (x *MemoryMetrics) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MemoryMetrics) GetWorkingSetBytes() *wrapperspb.UInt64Value {
	if x != nil {
		return x.WorkingSetBytes
	}
	return nil
}

func (x *MemoryMetrics) GetAvailableBytes() *wrapperspb.UInt64Value {
	if x != nil {
		return x.AvailableBytes
	}
	return nil
}

func (x *MemoryMetrics) GetUsageBytes() *wrapperspb.UInt64Value {
	if x != nil {
		return x.UsageBytes
	}
	return nil
}

func (x *MemoryMetrics) GetRssBytes() *wrapperspb.UInt64Value {
	if x != nil {
		return x.RssBytes
	}
	return nil
}

func (x *MemoryMetrics) GetPageFaults() *wrapperspb.UInt64Value {
	if x != nil {
		return x.PageFaults
	}
	return nil
}

func (x *MemoryMetrics) GetMajorPageFaults() *wrapperspb.UInt64Value {
	if x != nil {
		return x.MajorPageFaults
	}
	return nil
}

// FileSystemMetrics captures file system usage related to a container.
type FileSystemMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection timestamp in nanoseconds since epoch. Must be > 0.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Mount point path of the file system.
	Mountpoint string `protobuf:"bytes,2,opt,name=mountpoint,proto3" json:"mountpoint,omitempty"`
	// Total bytes used by the container image layer on this file system.
	UsedBytes *wrapperspb.UInt64Value `protobuf:"bytes,3,opt,name=used_bytes,json=usedBytes,proto3" json:"used_bytes,omitempty"`
	// Number of inodes used by the container images.
	InodesUsed    *wrapperspb.UInt64Value `protobuf:"bytes,4,opt,name=inodes_used,json=inodesUsed,proto3" json:"inodes_used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileSystemMetrics) Reset() {
	*x = FileSystemMetrics{}
	mi := &file_proto_container_metrics_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileSystemMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystemMetrics) ProtoMessage() {}

func (x *FileSystemMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_metrics_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystemMetrics.ProtoReflect.Descriptor instead.
func (*FileSystemMetrics) Descriptor() ([]byte, []int) {
	return file_proto_container_metrics_proto_rawDescGZIP(), []int{3}
}

func (x *FileSystemMetrics) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *FileSystemMetrics) GetMountpoint() string {
	if x != nil {
		return x.Mountpoint
	}
	return ""
}

func (x *FileSystemMetrics) GetUsedBytes() *wrapperspb.UInt64Value {
	if x != nil {
		return x.UsedBytes
	}
	return nil
}

func (x *FileSystemMetrics) GetInodesUsed() *wrapperspb.UInt64Value {
	if x != nil {
		return x.InodesUsed
	}
	return nil
}

// SwapMetrics reports swap usage for a container.
type SwapMetrics struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection timestamp in nanoseconds since epoch. Must be > 0.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Available swap in bytes: swap limit - used.
	AvailableBytes *wrapperspb.UInt64Value `protobuf:"bytes,2,opt,name=available_bytes,json=availableBytes,proto3" json:"available_bytes,omitempty"`
	// Total swap usage in bytes.
	UsageBytes    *wrapperspb.UInt64Value `protobuf:"bytes,3,opt,name=usage_bytes,json=usageBytes,proto3" json:"usage_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapMetrics) Reset() {
	*x = SwapMetrics{}
	mi := &file_proto_container_metrics_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapMetrics) ProtoMessage() {}

func (x *SwapMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_container_metrics_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapMetrics.ProtoReflect.Descriptor instead.
func (*SwapMetrics) Descriptor() ([]byte, []int) {
	return file_proto_container_metrics_proto_rawDescGZIP(), []int{4}
}

func (x *SwapMetrics) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SwapMetrics) GetAvailableBytes() *wrapperspb.UInt64Value {
	if x != nil {
		return x.AvailableBytes
	}
	return nil
}

func (x *SwapMetrics) GetUsageBytes() *wrapperspb.UInt64Value {
	if x != nil {
		return x.UsageBytes
	}
	return nil
}

var File_proto_container_metrics_proto protoreflect.FileDescriptor

const file_proto_container_metrics_proto_rawDesc = "" +
	"\n" +
	"\x1dproto/container_metrics.proto\x12\ametrics\x1a\x1egoogle/protobuf/wrappers.proto\"\x95\x03\n" +
	"\x10ContainerMetrics\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05image\x18\x03 \x01(\tR\x05image\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12\x18\n" +
	"\aattempt\x18\x06 \x01(\rR\aattempt\x124\n" +
	"\vcpu_metrics\x18\a \x01(\v2\x13.metrics.CpuMetricsR\n" +
	"cpuMetrics\x12=\n" +
	"\x0ememory_metrics\x18\b \x01(\v2\x16.metrics.MemoryMetricsR\rmemoryMetrics\x12J\n" +
	"\x13file_system_metrics\x18\t \x01(\v2\x1a.metrics.FileSystemMetricsR\x11fileSystemMetrics\x127\n" +
	"\fswap_metrics\x18\n" +
	" \x01(\v2\x14.metrics.SwapMetricsR\vswapMetrics\"\xc7\x01\n" +
	"\n" +
	"CpuMetrics\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12F\n" +
	"\x10usage_nano_cores\x18\x02 \x01(\v2\x1c.google.protobuf.UInt64ValueR\x0eusageNanoCores\x12S\n" +
	"\x17usage_core_nano_seconds\x18\x03 \x01(\v2\x1c.google.protobuf.UInt64ValueR\x14usageCoreNanoSeconds\"\xc1\x03\n" +
	"\rMemoryMetrics\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12H\n" +
	"\x11working_set_bytes\x18\x02 \x01(\v2\x1c.google.protobuf.UInt64ValueR\x0fworkingSetBytes\x12E\n" +
	"\x0favailable_bytes\x18\x03 \x01(\v2\x1c.google.protobuf.UInt64ValueR\x0eavailableBytes\x12=\n" +
	"\vusage_bytes\x18\x04 \x01(\v2\x1c.google.protobuf.UInt64ValueR\n" +
	"usageBytes\x129\n" +
	"\trss_bytes\x18\x05 \x01(\v2\x1c.google.protobuf.UInt64ValueR\brssBytes\x12=\n" +
	"\vpage_faults\x18\x06 \x01(\v2\x1c.google.protobuf.UInt64ValueR\n" +
	"pageFaults\x12H\n" +
	"\x11major_page_faults\x18\a \x01(\v2\x1c.google.protobuf.UInt64ValueR\x0fmajorPageFaults\"\xcd\x01\n" +
	"\x11FileSystemMetrics\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1e\n" +
	"\n" +
	"mountpoint\x18\x02 \x01(\tR\n" +
	"mountpoint\x12;\n" +
	"\n" +
	"used_bytes\x18\x03 \x01(\v2\x1c.google.protobuf.UInt64ValueR\tusedBytes\x12=\n" +
	"\vinodes_used\x18\x04 \x01(\v2\x1c.google.protobuf.UInt64ValueR\n" +
	"inodesUsed\"\xb1\x01\n" +
	"\vSwapMetrics\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12E\n" +
	"\x0favailable_bytes\x18\x02 \x01(\v2\x1c.google.protobuf.UInt64ValueR\x0eavailableBytes\x12=\n" +
	"\vusage_bytes\x18\x03 \x01(\v2\x1c.google.protobuf.UInt64ValueR\n" +
	"usageBytesB\fZ\n" +
	"/proto/genb\x06proto3"

var (
	file_proto_container_metrics_proto_rawDescOnce sync.Once
	file_proto_container_metrics_proto_rawDescData []byte
)

func file_proto_container_metrics_proto_rawDescGZIP() []byte {
	file_proto_container_metrics_proto_rawDescOnce.Do(func() {
		file_proto_container_metrics_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_container_metrics_proto_rawDesc), len(file_proto_container_metrics_proto_rawDesc)))
	})
	return file_proto_container_metrics_proto_rawDescData
}

var file_proto_container_metrics_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_container_metrics_proto_goTypes = []any{
	(*ContainerMetrics)(nil),       // 0: metrics.ContainerMetrics
	(*CpuMetrics)(nil),             // 1: metrics.CpuMetrics
	(*MemoryMetrics)(nil),          // 2: metrics.MemoryMetrics
	(*FileSystemMetrics)(nil),      // 3: metrics.FileSystemMetrics
	(*SwapMetrics)(nil),            // 4: metrics.SwapMetrics
	(*wrapperspb.UInt64Value)(nil), // 5: google.protobuf.UInt64Value
}
var file_proto_container_metrics_proto_depIdxs = []int32{
	1,  // 0: metrics.ContainerMetrics.cpu_metrics:type_name -> metrics.CpuMetrics
	2,  // 1: metrics.ContainerMetrics.memory_metrics:type_name -> metrics.MemoryMetrics
	3,  // 2: metrics.ContainerMetrics.file_system_metrics:type_name -> metrics.FileSystemMetrics
	4,  // 3: metrics.ContainerMetrics.swap_metrics:type_name -> metrics.SwapMetrics
	5,  // 4: metrics.CpuMetrics.usage_nano_cores:type_name -> google.protobuf.UInt64Value
	5,  // 5: metrics.CpuMetrics.usage_core_nano_seconds:type_name -> google.protobuf.UInt64Value
	5,  // 6: metrics.MemoryMetrics.working_set_bytes:type_name -> google.protobuf.UInt64Value
	5,  // 7: metrics.MemoryMetrics.available_bytes:type_name -> google.protobuf.UInt64Value
	5,  // 8: metrics.MemoryMetrics.usage_bytes:type_name -> google.protobuf.UInt64Value
	5,  // 9: metrics.MemoryMetrics.rss_bytes:type_name -> google.protobuf.UInt64Value
	5,  // 10: metrics.MemoryMetrics.page_faults:type_name -> google.protobuf.UInt64Value
	5,  // 11: metrics.MemoryMetrics.major_page_faults:type_name -> google.protobuf.UInt64Value
	5,  // 12: metrics.FileSystemMetrics.used_bytes:type_name -> google.protobuf.UInt64Value
	5,  // 13: metrics.FileSystemMetrics.inodes_used:type_name -> google.protobuf.UInt64Value
	5,  // 14: metrics.SwapMetrics.available_bytes:type_name -> google.protobuf.UInt64Value
	5,  // 15: metrics.SwapMetrics.usage_bytes:type_name -> google.protobuf.UInt64Value
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_container_metrics_proto_init() }
func file_proto_container_metrics_proto_init() {
	if File_proto_container_metrics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_container_metrics_proto_rawDesc), len(file_proto_container_metrics_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_container_metrics_proto_goTypes,
		DependencyIndexes: file_proto_container_metrics_proto_depIdxs,
		MessageInfos:      file_proto_container_metrics_proto_msgTypes,
	}.Build()
	File_proto_container_metrics_proto = out.File
	file_proto_container_metrics_proto_goTypes = nil
	file_proto_container_metrics_proto_depIdxs = nil
}
